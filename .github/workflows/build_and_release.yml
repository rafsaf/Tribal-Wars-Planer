name: Push image and redeploy

on:
  release:
    types:
      - created
  push:
    branches:
      - master

permissions:
  actions: write
  contents: read

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: rafsaf/twp-server

      - name: Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: cache-mount
          key: cache-mount-${{ runner.os }}-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            cache-mount-${{ runner.os }}-

      - name: Restore Docker cache mounts
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-dir: cache-mount
          dockerfile: Dockerfile
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build and push latest twp-server image
        uses: docker/build-push-action@v6
        with:
          target: build
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

  redeploy_stage:
    runs-on: ubuntu-latest
    needs: build_and_push
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v5
      - name: Redeploy stage server
        run: |
          curl -k -X POST https://${{ secrets.STAGE_HOOK_IP }}:9000/hooks/redeploy -H "Content-Type: application/json" -d '{"secret": "${{ secrets.STAGE_HOOK_SECRET }}"}'

  redeploy_dev:
    runs-on: ubuntu-latest
    needs: build_and_push
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v5
      - name: Redeploy dev server
        run: |
          curl -k -X POST https://${{ secrets.DEV_HOOK_IP }}:9000/hooks/redeploy -H "Content-Type: application/json" -d '{"secret": "${{ secrets.DEV_HOOK_SECRET }}"}' --connect-timeout 5 --max-time 10 --retry 5 --retry-delay 0 --retry-max-time 40

  redeploy_prod:
    runs-on: ubuntu-latest
    needs: build_and_push
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v5
      - name: Redeploy prod server
        run: |
          curl -k -X POST https://${{ secrets.PROD_HOOK_IP }}:9000/hooks/redeploy -H "Content-Type: application/json" -d '{"secret": "${{ secrets.PROD_HOOK_SECRET }}"}'
