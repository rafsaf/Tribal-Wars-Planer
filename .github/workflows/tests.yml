name: Run pytest based tests

on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_INITDB_ARGS: --no-sync
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13.3
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.3"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: /opt/venv

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: /opt/venv
          key: venv-${{ runner.os }}-3.13.3-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies and actiavte virtualenv
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root

      - name: Create .env file from example env file and staticfiles
        run: |
          cp .env.example .env
          poetry run python manage.py collectstatic --no-input
          make build_cython
          rm utils/write_noble_target.py
          rm utils/write_ram_target.py

      - name: Coverage full tests
        env:
          POSTGRES_HOST: localhost
        run: |
          make test

      - name: Upload coverage result to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: unittests
          files: coverage.xml
          fail_ci_if_error: false
